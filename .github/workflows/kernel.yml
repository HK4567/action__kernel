name: kernel_build

on:
  workflow_dispatch:
    inputs:
      STRAT:
        description: 'STRAT'
        required: true
        default: 'strat'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 最大化构建磁盘空间
        uses: easimon/maximize-build-space@v6
        with:
          root-reserve-mb: 1024
          swap-size-mb: 10240
          remove-dotnet: 'true'
          temp-reserve-mb: 1024
          remove-android: 'true'
          remove-haskell: 'true'

      - name: 查看
        uses: actions/checkout@v3

      - name: 下载依赖
        run: |
          sudo apt -y install git python2 python3 gcc-aarch64-linux-gnu clang bc bison flex libssl-dev ccache zip tree 

      - name: 下载内核
        run: |
          cd $GITHUB_WORKSPACE
          git clone --depth=1 https://github.com/Slowhy/android_kernel_lge_msm8998.git -b vaccine kernel

      - name: 下载编译器
        run: |
          git clone --depth=1 https://github.com/HyperLYP/GCC-4.9.git -b gcc4.9 gcc
          
      - name: 编译内核
        run: |
          cd $GITHUB_WORKSPACE/kernel
          
          git submodule update --init --recursive
          export CLANG_PATH=$GITHUB_WORKSPACE/gcc
          export PATH=${CLANG_PATH}/bin:${PATH}
          #echo CONFIG_USB_SERIAL=y >> arch/arm64/configs/vendor/gauguin_user_defconfig
          #echo CONFIG_USB_SERIAL_QUALCOMM=y >> arch/arm64/configs/vendor/gauguin_user_defconfig
          #cat arch/arm64/configs/vendor/gauguin_user_defconfig
          make O=out \
                ARCH=arm64 \
                CLANG_TRIPLE=aarch64-linux-android- \
                CROSS_COMPILE=$GITHUB_WORKSPACE/gcc/bin/aarch64-linux-android- \
                CC=$GITHUB_WORKSPACE/gcc/bin/aarch64-linux-android-gcc \
                lineageos_h930_defconfig
          echo "-------------------------------------------------------------------------------------------"
          #wget https://raw.githubusercontent.com/HK4567/action_build_kernel/main/.config1
          ls
          #mv .config1 out/.config

          echo "-------------------------------------------------------------------------------------------"
          make O=out \
                ARCH=arm64 \
                CLANG_TRIPLE=aarch64-linux-android- \
                CROSS_COMPILE=$GITHUB_WORKSPACE/gcc/bin/aarch64-linux-android- \
                CC=$GITHUB_WORKSPACE/gcc/bin/gcc \
                -j4
          ls out/
          #ls out/.tmp_versions/
          
 
      - name: Anykernel3
        run: |
          cd $GITHUB_WORKSPACE/kernel
          git clone https://github.com/osm0sis/AnyKernel3.git
          mv out/arch/arm64/boot/Image AnyKernel3/
          mv out/arch/arm64/boot/dtbo.img AnyKernel3/
          
          zip -r AnyKernel3.zip AnyKernel3/

      - name: 上传文件
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: "${{ github.workspace }}/kernel/AnyKernel3.zip"
          name: " kernel for n9p "
          tag: " ${{ github.run_number }} "
          token: ${{ secrets.work }}
